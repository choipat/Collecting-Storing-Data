y <- sample(11:22,replace = T)
Z <- x+y
print(Z)
}
A_function(prk,pramod)
rm(A_function)
X <- c(1:10)
y1 <- 2* exp(-X/2)
y2  <- 2* X * exp(-X/2)
y3 <- X * exp(-X/2)
y4 <- 2 * exp(-X)
X <- c(1:10)
y1 <- 2* exp(-X/2)
y2  <- 2* X * exp(-X/2)
y3 <- X * exp(-X/2)
y4 <- 2 * exp(-X)
plot(X,y1,type="l")
plot(X,y1,type="l")
+ plot(X,y2,type = "l")
plot(X,y2,type = "l")
plot(X,y1,type="l")
plot(X,y2,type = "l")
plot(X,y3,type = "l")
plot(X,y4,type = "l")
plot(X,y1,type="l")
plot(X,y1,type="l")
plot(X,y2,type = "l")
plot(X,y3,type = "l")
plot(X,y4,type = "l")
library(plyr)
sample.data <- read.csv(file = file.choose())
count(sample.data, vars=c("Group","Size"))
count(sample.data$Wildlife..Number.struck, vars=c("2to10","Size"))
count(sample.data$Wildlife..Number.struck, vars=c("2 to 10","Size"))
setwd("C:/Users/Michael Propp/Desktop/Information Assignemnt/Ass-10/")
library(RSQLite)
database <- dbConnect(SQLite(),dbname="BIRD.new.sqlite")
Bird.data <- read.csv("Bird Strikes.csv",header = T)
Aircraft_data <- unique(cbind.data.frame
(as.character(Aircraft_data$Aircraft..Type),
as.character(Aircraft_data$Aircraft..Make.Model),
as.character(Aircraft_data$Aircraft..Flight.Number),
as.character(Aircraft_data$Aircraft..Number.of.engines.)))
Aircraft.data <- unique(cbind.data.frame
(as.character(Bird.data$Aircraft..Type),
as.character(Bird.data$Aircraft..Make.Model),
as.character(Bird.data$Aircraft..Flight.Number),
as.character(Bird.data$Aircraft..Number.of.engines.)))
colnames(Aircraft.data) <- c("Type of airplane","Make of model","Flight number", "Number of engines")
Aircraft.data$Aircraft_data_newID <- sample(1:nrow(Aircraft.data)
Aircraft.data$Aircraft_data_newID <- sample(1:nrow(Aircraft.data))
Aircraft.data$Aircraft_data_newID <- sample(1:nrow(Aircraft.data))
View(Aircraft.data)
dbWriteTable(conn = database, name = "Aircraft_table", value = Aircraft.data,
row.names = F)
dbWriteTable(conn = database, name = "Aircraft_new_table", value = Aircraft.data,
row.names = F)
Aircraft_merge <- merge(Bird.data, Aircraft.data, by.x=c("Aircraft..Type",
"Aircraft..Make.Model",
"Aircraft..Flight.Number",
"Aircraft..Number.of.engines."),
by.y=c("Type of airplane",
"Make of model",
"Flight number",
"Number of engines"))
dbGetQuery(database, "SELECT [Flight number],[Number of engines] from Aircraft_new_table")
dbGetQuery(database, "SELECT [Flight number],[Make of model] from Aircraft_new_table")
Birdstrike.data <- unique(cbind.data.frame(as.character(Bird.data$Effect..Impact.to.flight),
as.character(Bird.data$Effect..Other),
as.character(Bird.data$Reported..Date),
as.character(Bird.data$Remains.of.wildlife.collected.),
as.character(Bird.data$Pilot.warned.of.birds.or.wildlife.),
as.character(Bird.data$When..Time..HHMM.),
as.character(Bird.data$When..Time.of.day),
as.character(Bird.data$Remains.of.wildlife.sent.to.Smithsonian)))
colnames(Birdstrike.data) <- c("Impact",
"Other effect",
"Reported Date",
"Remians collected",
"Pilot warned",
"Time HHMM",
"Time of day",
"Smithsonian collection")
Birdstrike.data$BirdstrikeID <- sample(32436:nrow(Birdstrike.data))
View(Birdstrike.data)
Birdstrike_merge  <- merge(Aircraft_merge,Birdstrike.data,
by.x=c("Effect..Impact.to.flight",
"Effect..Other",
"Reported..Date",
"Remains.of.wildlife.collected.",
"Pilot.warned.of.birds.or.wildlife.",
"When..Time..HHMM.",
"When..Time.of.day",
"Remains.of.wildlife.sent.to.Smithsonian")
, by.y=c("Impact",
"Other effect",
"Reported Date",
"Remians collected",
"Pilot warned",
"Time HHMM",
"Time of day",
"Smithsonian collection"))
dbWriteTable(conn = database , name = "Birdstrike_new_table", value = Birdstrike_merge,row.names = F)
dbListFields(database,"Birdstrike_new_table")
dbListFields(database,"Aircraft_new_table")
dbGetQuery(database,"SELECT [Impact],[Other effect] from Birdstrike_table_final")
db <- dbConnect(SQLite(),dbname="books.Data.new.sqlite")
book_data <- read.csv("bookData.csv", header=TRUE)
authors <- unique(cbind.data.frame(as.character(book_data$AuthorName),as.character(book_data$AuthorDetails))) # removing
colnames(authors)<- c("Author Name", "Author Details")
authors$AuthorID <- sample(1:20,nrow(authors))
dbWriteTable(conn = db, name = "Authorstable", value = authors,
row.names = FALSE)
#dbReadTable(db,"Authors")
View(authors)
View(book_data)
merge.data <- merge(book_data,authors,by.x=c("AuthorName","AuthorDetails"),
by.y=c("Author Name","Author Details"))
dbGetQuery(db, " SELECT [Author Name], [Author Details] from Authorstable")
books<- unique(cbind.data.frame(as.character(book_data$BookName),as.character(book_data$BookGenre))) #removing redundancy
colnames(books)<- c("Book Name", "Book Genre")
books$bookID<-sample(100:130,nrow(books))
finalmerge<- merge(merge.data,books, by.x=c("BookName","BookGenre"),by.y=c("Book Name","Book Genre"))
finalmerge
dbWriteTable(conn = db, name = "Books", value = books,
row.names = FALSE) #Writing Books Table
dbListFields(db,"Books")
dbWriteTable(conn = database , name = "Birdstrike_new_table_final", value = Birdstrike.data,row.names = F)
dbListFields(database,"Birdstrike_new_table_final")
dbGetQuery(database,"SELECT [Impact],[Other effect] from Birdstrike_new_table_final")
Birde_Aircraft <- cbind.data.frame(Birdstrike.data,Bird.data_newID)
Birde_Aircraft <- cbind.data.frame(Birdstrike.data,Aircraft.data$Aircraft_data_newID)
Birde_Aircraft <- unique(cbind.data.frame(Birdstrike.data,Aircraft.data$Aircraft_data_newID))
dbListFields(database,"Birdstrike_new_table_final")
View(Birdstrike_merge)
Birdstrike_merge$Aircraft_data_newID
dbWriteTable(conn = database , name = "Birdstrike_new_table", value = Birdstrike_merge,row.names = F)
dbGetQuery(database,"SELECT [When..Time.of.day],[Remains.of.wildlife.sent.to.Smithsonian] from Birdstrike_new_table")
Wildlife  <- unique(cbind.data.frame(as.character(Bird.data$Wildlife..Number.struck),
as.character(Bird.data$Wildlife..Size)))
colnames(Wildlife) <- c("Wildlife struck","Wildlifesize")
nrow(Wildlife)
Wildlife$ID <- sample(19:nrow(Wildlife))
View(Wildlife)
Wildlife_merge <- merge(Birdstrike_merge,Wildlife,
by.x = c("Wildlife..Number.struck",
"Wildlife..Size"),
by.y = c("Wildlife struck",
"Wildlifesize"))
dbWriteTable(database,name = "Wildlife_table", value = Wildlife_merge, row.names = F)
dbGetQuery(database,"SELECT [Wildlife..Number.struck],
[Wildlife..Size] from  Wildlife_merge")
dbGetQuery(database,"SELECT [Wildlife..Number.struck],
[Wildlife..Size] from  Wildlife_table")
dbGetQuery(database,"SELECT [Wildlife..Number.struck],
[Wildlife..Size] from  Wildlife_table")
View(Wildlife_merge)
Wildlife_merge$ID
Wildlife_merge$BirdstrikeID
#Airport
Airport <- unique(cbind.data.frame(as.character(Bird.data$Airport..Name),
as.character(Bird.data$Record.ID)))
nrow(Airport)
Airport$AirportID <- sample(99404:nrow(Airport))
Airport_merge <- merge(Wildlife_merge,Airport,
by.x = c("Airport..Name",
"Record.ID"),
by.y = c("Airportname",
"RecordID"))
Airport_merge <- merge(Wildlife_merge,Airport)
Airport_merge <- merge(Wildlife_merge,Airport)
View(Airport)
nrow(Wildlife_merge)
Airport_merge <- cbind.data.frame(Wildlife_merge,Airport$AirportID)
View(Airport_merge)
dbWriteTable(database,name = "Airport_table", value = Airport_merge, row.names = F)
dbGetQuery(database,"SELECT [Airport..Name] from Airport_table")
Operations <- unique(cbind.data.frame(as.character(Bird.data$Aircraft..Airline.Operator),
as.character(Bird.data$Origin.State),
as.character(Bird.data$When..Phase.of.flight),
as.character(Bird.data$Conditions..Precipitation),
as.character(Bird.data$Altitude.bin),
as.character(Bird.data$Conditions..Sky)))
nrow(Operations)
Operations$ID <- sample(24531:nrow(Operations))
Operations_merge
Operations$OperationsID <- sample(24531:nrow(Operations))
Operations_merge_exp <- cbind.data.frame(Airport_merge,Operations$OperationsID)
Operations <- unique(cbind.data.frame(as.character(Bird.data$Aircraft..Airline.Operator),
as.character(Bird.data$Origin.State),
as.character(Bird.data$When..Phase.of.flight),
as.character(Bird.data$Conditions..Precipitation),
as.character(Bird.data$Altitude.bin),
as.character(Bird.data$Conditions..Sky)))
colnames(Operations) <- c("operator","origin","phase","precipitation","altitude","conditions")
Operations$OperationsID <- sample(24531:nrow(Operations))
Operations_merge <- merge(Wildlife_merge,Operations,
by.x =  c("Aircraft..Airline.Operator",
"Origin.State",
"When..Phase.of.flight",
"Conditions..Precipitation",
"Altitude.bin",
"Conditions..Sky"),
by.y = c("operator","origin","phase","precipitation","altitude","conditions"))
Operations_merge <- merge(Airport_merge,Operations,
by.x =  c("Aircraft..Airline.Operator",
"Origin.State",
"When..Phase.of.flight",
"Conditions..Precipitation",
"Altitude.bin",
"Conditions..Sky"),
by.y = c("operator","origin","phase","precipitation","altitude","conditions"))
dbWriteTable(database,value = "Operations_table", value = Operations_merge, row.names = F)
Operations_merge_final <- merge(Airport_merge,Operations,
by.x =  c("Aircraft..Airline.Operator",
"Origin.State",
"When..Phase.of.flight",
"Conditions..Precipitation",
"Altitude.bin",
"Conditions..Sky"),
by.y = c("operator","origin","phase","precipitation","altitude","conditions"))
dbWriteTable(database,value = "Operations_final", value = Operations_merge_final, row.names = F)
rm(Operations)
rm(OperationsID)
rm(Operations_merge_final)
rm(Operations_merge)
View(Operations_merge_final)
Operations <- unique(cbind.data.frame(as.character(Bird.data$Aircraft..Airline.Operator),
as.character(Bird.data$Origin.State),
as.character(Bird.data$When..Phase.of.flight),
as.character(Bird.data$Conditions..Precipitation),
as.character(Bird.data$Altitude.bin),
as.character(Bird.data$Conditions..Sky)))
colnames(Operations) <- c("operator","origin","phase","precipitation","altitude","conditions")
Operations$OperationsID <- sample(24531:nrow(Operations))
Operations_merge_final <- merge(Airport_merge,Operations,
by.x =  c("Aircraft..Airline.Operator",
"Origin.State",
"When..Phase.of.flight",
"Conditions..Precipitation",
"Altitude.bin",
"Conditions..Sky"),
by.y = c("operator","origin","phase","precipitation","altitude","conditions"))
dbWriteTable(database, value = "Operations_table",value = Operations_merge_final, row.names = F)
dbWriteTable(database, name = "Operations_table",value = Operations_merge_final, row.names = F)
dbGetQuery(database, "SELECT [When..Phase.of.flight],
[Conditions..Precipitation], from Operations_table)
dbGetQuery(database, "SELECT [When..Phase.of.flight],
[Conditions..Precipitation], from Operations_table")
dbGetQuery(database, "SELECT [When..Phase.of.flight],
[Conditions..Precipitation], from Operations_table")
dbGetQuery(database, "SELECT [When..Phase.of.flight],
[Conditions..Precipitation] from Operations_table")
query1<- dbSendQuery(db, "Select [Student Name], [Student Email], [Book Name],
[Book Genre], [Author Name] from Students
+ INNER JOIN Books ON Students.BookID = Books.BookID
+ INNER JOIN Authors ON Books.AuthorID = Authors.AuthorID")
query1<- dbSendQuery(db, "Select [Student Name], [Student Email], [Book Name],
[Book Genre], [Author Name] from Students
INNER JOIN Books ON Students.BookID = Books.BookID
INNER JOIN Authors ON Books.AuthorID = Authors.AuthorID")
dbGetQuery(database, "SELECT [Flight number],[Number of engines] from Aircraft_new_table")
query1 <- dbSendQuery(database, "SELECT [Aircraft..Type],[Effect..Other],
[Wildlife..Size] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Bird.data_newID = Aircraft_new_table.Bird.data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID")
query1 <- dbSendQuery(database, "SELECT [Type of airplane],[Effect..Other],
[Wildlife..Size] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Bird.data_newID = Aircraft_new_table.Bird.data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID"
)
query1 <- dbSendQuery(database, "SELECT [Type of airplane],[Other effect],
[Wildlife struck] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Bird.data_newID = Aircraft_new_table.Bird.data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID"
)
query1 <- dbSendQuery(database, "SELECT [Type of airplane],[Effect..Other],
[Wildlife..Size] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Bird.data_newID = Aircraft_new_table.Bird.data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID"
)
query1 <- dbSendQuery(database, "SELECT [Type of airplane],[When..Time.of.day],
[Wildlife..Size] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Bird.data_newID = Aircraft_new_table.Bird.data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID"
)
query1 <- dbSendQuery(database, "SELECT [Type of airplane],
[Wildlife..Size] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Bird.data_newID = Aircraft_new_table.Bird.data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID"
)
query1 <- dbSendQuery(database, "SELECT [Type of airplane],
from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Bird.data_newID = Aircraft_new_table.Bird.data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID"
)
query1 <- dbSendQuery(database, "SELECT [Type of airplane]
from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Bird.data_newID = Aircraft_new_table.Bird.data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID"
)
dbListFields(database,"Operations_table")
dbListFields(database,"Operations_table")
colnames(Operations_merge_final)
query1 <- dbSendQuery(database, "SELECT [Type of airplane],[When..Time..HHMM.],[Wildlife..Species]
from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID"
)
query1 <- dbSendQuery(database, "SELECT [Type of airplane] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID"
)
query1
View(query1)
setwd()
wd()
getwd()
query1 <- dbSendQuery(database, "SELECT [Type of airplane] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID"
)
query1 <- dbSendQuery(database, "SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID"
)
query.new <- dbSendQuery(database, "SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID"
)
query.new <- dbGetQuery(database, "SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID"
)
class(Operations_merge_final)
Operations_merge_final$ID
Operations_merge_final$BirdstrikeID
Operations_merge_final$Aircraft_data_newID
View(Operations_merge_final)
length(Operations_merge_final)
nrow(Operations_merge_final)
ncol(Operations_merge_final)
query.new <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID"
)
query.new
print(query.new)
dbFetch(query1,5)
dbFetch(query.new,5)
query.new <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
WHERE [Type of airplane]='Helicopter'")
)
query.new <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
WHERE [Type of airplane]='Helicopter'")
View(Wildlife_merge)
View(Operations_merge_final)
query.airplane <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
WHERE [Type of airplane]='Helicopter'")
query.airplane <- dbGetQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
WHERE [Type of airplane]='Helicopter'")
dbFetch(query.airplane,5)
query.airplane <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
WHERE [Type of airplane]='Helicopter'")
dbFetch(query.airplane,5)
query.airplane <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
WHERE [Type of airplane]='Helicopter'
WHERE [Pilot.warned.of.birds.or.wildlife.]='1'")
query.airplane <- dbGetQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
WHERE [Type of airplane]='Helicopter'
WHERE [Pilot.warned.of.birds.or.wildlife.]='1'")
query_airplane <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
WHERE [Type of airplane]='Helicopter',
WHERE [Pilot.warned.of.birds.or.wildlife.]='1'")
query_airplane <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
WHERE [Type of airplane]='Helicopter'
WHERE [Pilot.warned.of.birds.or.wildlife.]='1'")
query_airplane <- dbGetQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
WHERE [Type of airplane]='Helicopter'
WHERE [Pilot.warned.of.birds.or.wildlife.]='1'")
query_airplane <- dbGetQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
WHERE [Type of airplane]='Helicopter'
WHERE [Pilot.warned.of.birds.or.wildlife.]=1")
query_airplane <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
WHERE [Type of airplane]='Helicopter'
WHERE [Pilot.warned.of.birds.or.wildlife.]=1")
query_airplane <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
WHERE [Type of airplane]='Helicopter'
WHERE [Pilot.warned.of.birds.or.wildlife.]= '1' ")
query_airplane <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
WHERE [Type of airplane]='Helicopter' AND
WHERE [Pilot.warned.of.birds.or.wildlife.]= '1' ")
query_airplane <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
GROUP BY [Pilot.warned.of.birds.or.wildlife.]
WHERE [Type of airplane]='Helicopter'
)
query_airplane <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
GROUP BY [Pilot.warned.of.birds.or.wildlife.]
WHERE [Type of airplane]='Helicopter'"
)
query_airplane <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
GROUP BY [Pilot.warned.of.birds.or.wildlife.]
WHERE [Type of airplane]='Helicopter'"
)
query_airplane <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
GROUP BY [Pilot.warned.of.birds.or.wildlife.]
WHERE [Type of airplane]='Helicopter'")
query_airplane <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
GROUP BY [Pilot.warned.of.birds.or.wildlife.]")
query_airplane <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
WHERE [Type of airplane]='Helicopter'")
query_airplane <- dbSendQuery(database,
"SELECT [Type of airplane] [Pilot.warned.of.birds.or.wildlife.] from Operations_table
INNER JOIN Aircraft_new_table ON Operations_table.Aircraft_data_newID = Aircraft_new_table.Aircraft_data_newID
INNER JOIN Birdstrike_new_table ON Operations_table.BirdstrikeID = Birdstrike_new_table.BirdstrikeID
INNER JOIN Wildlife_table ON Operations_table.ID = Wildlife_table.ID
WHERE [Pilot.warned.of.birds.or.wildlife.]='1'")
